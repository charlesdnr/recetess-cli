/* components/recipe-form/recipe-form.component.scss */
.header {
  margin-bottom: 30px;

  h1 {
    margin-bottom: 10px;
    color: var(--dark-color);
  }

  .back-link {
    display: inline-block;
    margin-bottom: 20px;
    color: var(--secondary-color);
    text-decoration: none;

    i {
      margin-right: 5px;
    }

    &:hover {
      color: var(--primary-color);
      text-decoration: underline;
    }
  }
}

.loading-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 300px;

  i {
    color: var(--primary-color);
    margin-bottom: 20px;
  }

  p {
    font-size: 1.2rem;
    color: var(--dark-color);
  }
}

.form-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;

  .col-12 {
    width: 100%;
  }

  .col-6 {
    width: calc(50% - 10px);
  }

  .col-3 {
    width: calc(25% - 15px);
  }
}

.form-field {
  display: flex;
  flex-direction: column;
  margin-bottom: 10px;

  label {
    margin-bottom: 8px;
    color: var(--dark-color);
    font-weight: 500;
  }

  small.form-help-text {
    margin-top: 5px;
    color: var(--secondary-color);
    font-size: 0.8rem;
  }

  :host ::ng-deep .p-dropdown,
  :host ::ng-deep .p-inputnumber {
    width: 100%;
  }
}

h3 {
  margin-top: 20px;
  margin-bottom: 20px;
  color: var(--primary-color);
  font-size: 1.4rem;
}

.ingredients-list,
.steps-list {
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin-bottom: 20px;
}

.ingredient-item {
  display: flex;
  gap: 10px;

  .ingredient-input {
    flex: 1;
  }
}

.step-item {
  display: flex;
  gap: 10px;
  align-items: flex-start;

  .step-input {
    flex: 1;
  }
}

.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: 10px;
  margin-top: 30px;
}

@media (max-width: 768px) {
  .form-grid {
    .col-6,
    .col-3 {
      width: 100%;
    }
  }
}

/* Style pour les champs invalides */
:host ::ng-deep {
  .p-error {
    color: var(--primary-color);
    margin-top: 5px;
  }

  .p-card {
    .p-card-content {
      padding: 1.5rem;
    }
  }

  .p-button-secondary {
    background-color: var(--secondary-color);
    border-color: var(--secondary-color);

    &:hover {
      background-color: var(--dark-color) !important;
      border-color: var(--dark-color) !important;
    }
  }

  .p-fileupload-buttonbar {
    background-color: transparent;
    border: none;
    padding: 0;
  }

  .p-button-sm {
    font-size: 0.875rem;
    padding: 0.4rem 0.8rem;
  }
}
/* Styles additionnels pour p-chips dans recipe-form.component.scss */

:host ::ng-deep {
  /* Styles pour p-chips */
  .p-chips {
    width: 100%;

    .p-chips-multiple-container {
      width: 100%;
      min-height: 40px;
      background-color: var(--white);

      &:hover {
        border-color: var(--primary-color);
      }

      &.p-focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 0.2rem rgba(255, 105, 120, 0.25);
      }

      .p-chips-token {
        background-color: var(--secondary-color);
        color: var(--white);
        padding: 0.25rem 0.5rem;
        margin: 0.25rem;
        border-radius: 16px;

        .p-chips-token-icon {
          margin-left: 0.5rem;

          &:hover {
            color: rgba(255, 255, 255, 0.8);
          }
        }
      }

      .p-chips-input-token {
        min-width: 150px;

        input {
          font-family: var(--font-family);
          color: var(--dark-color);
          padding: 0.25rem;

          &::placeholder {
            color: var(--secondary-color);
            opacity: 0.7;
          }
        }
      }
    }
  }

  /* Améliorations pour le formulaire */
  .p-card {
    .p-card-content {
      padding: 1.5rem;
    }
  }

  .p-inputtext,
  .p-inputtextarea,
  .p-inputnumber,
  .p-select {
    width: 100%;
  }

  .ingredient-item,
  .step-item {
    transition: all 0.3s ease;

    &:hover {
      transform: translateX(5px);
    }
  }

  .step-number {
    font-family: var(--font-family);
  }

  .p-fileupload-buttonbar {
    background-color: transparent;
    border: none;
    padding: 0;

    .p-button {
      background-color: var(--secondary-color);
      border-color: var(--secondary-color);

      &:hover {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
      }
    }
  }

  .form-actions {
    .p-button-text {
      color: var(--secondary-color);

      &:hover {
        background-color: rgba(110, 152, 135, 0.1);
      }
    }

    .p-button-text + .p-button {
      margin-left: 0.5rem;
    }
  }
}
::ng-deep {
  .p-autocomplete .p-textarea,
  textarea {
    width: 100%;
  }
}

:host ::ng-deep {
  .recipe-fileupload {
    .p-fileupload-buttonbar {
      background-color: var(
        --surface-100,
        #f8f9fa
      ); // Fond légèrement différent pour la barre de boutons
      border: 1px solid var(--surface-border, #dee2e6);
      border-bottom: none;
      border-radius: var(--border-radius) var(--border-radius) 0 0;
      padding: 1rem;
    }

    .p-fileupload-content {
      background-color: var(--surface-b, #ffffff);
      border: 1px solid var(--surface-border, #dee2e6);
      border-top: none; // La barre de bouton a déjà la bordure haute
      border-radius: 0 0 var(--border-radius) var(--border-radius);
      padding: 1.5rem; // Espace intérieur
      min-height: 150px; // Hauteur minimale pour la zone de contenu

      h5 {
        margin-top: 0;
        margin-bottom: 1rem;
        font-weight: 600;
        color: var(
          --primary-color
        ); // Utilise la couleur primaire pour le titre
      }
    }

    // Style pour la carte de fichier individuel
    .p-fileupload-file-card {
      border: 1px solid var(--surface-d, #e9ecef);
      padding: 1rem;
      border-radius: var(--border-radius);
      background-color: var(
        --surface-a,
        #f8f9fa
      ); // Fond léger pour la carte fichier

      img {
        object-fit: cover; // Mieux pour les aperçus
        border-radius: var(--border-radius);
        margin-bottom: 0.5rem;
      }

      span.font-semibold {
        display: block; // Assure qu'il prend la largeur
        max-width: 150px; // Limite la largeur du nom de fichier
      }

      p-badge {
        margin-top: 0.5rem;
      }

      p-button {
        margin-top: 0.75rem;
      }
    }

    // Style pour la zone vide
    .p-fileupload-empty {
      padding: 2rem;
      border: 1px dashed var(--surface-border, #dee2e6);
      border-radius: 0 0 var(--border-radius) var(--border-radius);
      background-color: var(--surface-a, #f8f9fa);

      i {
        color: var(--secondary-color); // Icône dans la couleur secondaire
      }
      p {
        color: var(--text-color-secondary);
      }
    }

    // Ajustements des boutons dans le header
    .p-fileupload-header .p-button {
      min-width: auto; // Permet aux boutons d'être plus petits
      padding: 0.5rem 1rem; // Ajuste le padding
    }
  }
}

.ingredient-row {
  display: flex;
  align-items: center;
  width: 100%;
}

.ingredient-item-cdk {
  display: flex; // Garder flex pour la structure interne
  align-items: center;
  padding: 2px 0; // **RÉDUIRE PADDING VERTICAL** (ajustez 2px si besoin)
  margin-bottom: 2px; // **RÉDUIRE MARGE INFÉRIEURE** (ajustez 2px si besoin)
  background-color: var(--surface-card); // Fond de chaque ligne
  border-bottom: 1px solid var(--surface-hover); // **Ligne de séparation fine**
  box-sizing: border-box; // Important pour les transitions

  &:last-child {
    border-bottom: none; // Pas de bordure pour le dernier
    margin-bottom: 0;
  }

  .item-content {
    padding: 0.25rem 0.5rem; // Peut-être réduire légèrement le padding interne aussi
  }

  .drag-handle {
    padding-top: 0; // Réajuster si le padding a changé
    align-self: stretch; // Étirer la poignée verticalement
    display: flex;
    align-items: center;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    color: var(--text-color-secondary);
  }
}
.ingredients-list-cdk {
  display: block; // Assurez-vous que c'est un conteneur de bloc
  // border: 1px solid var(--surface-border); // Optionnel: pour mieux voir la zone
  border-radius: var(--border-radius);
}
.item-content {
  display: flex;
  flex-direction: row;
  align-items: center;
  flex: 1;
}

.drag-handle {
  display: flex;
  align-items: center;
  margin-right: 10px;
  cursor: move;
}

.step-item-cdk {
  display: flex;
  align-items: flex-start;
  width: 100%;
  margin-bottom: 10px;
}

.drag-handle {
  margin-right: 10px;
  cursor: move;
  padding-top: 8px; /* Pour aligner avec le début du texte */
}
// Style de l'élément pendant qu'on le déplace (le "fantôme")
.cdk-drag-preview {
  box-sizing: border-box;
  border-radius: var(--border-radius);
  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
    0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12); // Ombre portée style Material
  background: var(
    --surface-highlight
  ); // Fond légèrement différent pour le fantôme
}

// Style de l'espace réservé où l'élément peut être déposé
.cdk-drag-placeholder {
  background: rgba(var(--primary-rgb), 0.1); // Fond très léger couleur primaire
  border: 1px dashed var(--primary-color);
  min-height: 45px; // Ajustez à la hauteur approx. d'un item après réduction padding
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1); // Animation douce de l'espace
  opacity: 0.5;
  // Masquer le contenu interne du placeholder généré par CDK
  > * {
    visibility: hidden;
  }
}

// Appliquer une transition douce aux éléments qui bougent pour laisser la place
.cdk-drop-list-dragging .cdk-drag {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1); // Ajustez la durée/timing si besoin
}

// Animation de l'élément qui vient d'être déposé et prend sa place finale
.cdk-drag-animating {
  transition: transform 300ms cubic-bezier(0, 0, 0.2, 1);
}

.step-number {
  padding-top: 8px; /* Pour aligner avec le début du texte */
}

.step-input {
  flex: 1;
}

textarea.p-inputtext-sm {
  width: 100%;
  resize: vertical; /* Permet à l'utilisateur de redimensionner verticalement */
}
.quick-add-field {
  margin-bottom: 1rem; // Espace avant la liste

  label {
    font-weight: 500; // Rendre le label un peu plus visible
    display: block;
    margin-bottom: 0.5rem;
  }

  // Assurer que le bouton dans InputGroup prend moins de place
  :host ::ng-deep .p-inputgroup .p-button.p-button-icon-only {
    width: auto; // Permet au bouton de s'adapter à l'icône
  }
  :host ::ng-deep .p-inputgroup .p-button.p-button-sm {
    padding: 0.5rem; // Ajuster le padding du petit bouton si besoin
  }

  .form-help-text {
    font-size: 0.85rem;
    color: var(--secondary-color); // Ou --text-color-secondary
  }
}

// Espacement entre le champ d'ajout et la liste
.list-container.mt-3 {
  margin-top: 1.5rem !important; // Un peu plus d'espace
}

// Message quand la liste est vide
.list-empty-message {
  padding: 1rem;
  text-align: center;
  color: var(--text-color-secondary);
  border: 1px dashed var(--surface-border);
  border-radius: var(--border-radius);
  margin-top: 0.5rem; // Espace après le champ d'ajout
}
.quick-add-form {
  border: 1px solid var(--surface-border);
  padding: 0.75rem;
  border-radius: var(--border-radius);
  background-color: var(--surface-section); // Légèrement différent du fond ?
  margin-bottom: 1.5rem; // Espace avant la liste

  .field {
    margin-bottom: 0; // Pas de marge sous les champs dans cette ligne compacte
    padding-right: 0.5rem; // Espace entre les champs
    &:last-child {
      padding-right: 0;
    }
  }
  // S'assurer que p-inputNumber ne prend pas trop de hauteur
  :host ::ng-deep .p-inputnumber .p-inputtext {
    padding-top: 0.4rem;
    padding-bottom: 0.4rem;
  }
}

// Message quand la liste D&D est vide
.list-container.list-empty {
  border: 1px dashed var(--surface-d); // Bordure différente si vide
  padding: 1rem;
  min-height: 60px; // Hauteur minimale pour voir le message
}
.list-empty-message {
  text-align: center;
  color: var(--text-color-secondary);
  font-style: italic;
  padding: 1rem 0;
}
.container-header-ing {
  display: flex;
  flex-direction: column;
  gap: 10px;
}
